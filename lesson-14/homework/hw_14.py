import json
import requests
import urllib3
import os
import random
#1
def import_json(path):
    try:
        with open(path) as f:
            return json.load(f)
    except FileNotFoundError:
        print(f'file not found')
    except json.JSONDecodeError:
        print(f'error text is not json')
d1 = import_json("students.json")
print(d1)
#2
url = r'https://api.openweathermap.org/data/2.5/find?q=Toshkent&appid=5796abbde9106b7da4febfae8c44c232&units=metric'
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
weather = requests.get(url, verify=False)
d1 = weather.json()
city = d1['list'][0]
main = city['main']
weather = city['weather'][0]
wind = city['wind']

print(f"üìç –ì–æ—Ä–æ–¥: {city['name']}, {city['sys']['country']}")
print(f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {main['temp']}¬∞C")
print(f"üå° –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {main['feels_like']}¬∞C")
print(f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {main['humidity']}%")
print(f"üß≠ –î–∞–≤–ª–µ–Ω–∏–µ: {main['pressure']} –≥–ü–∞")
print(f"üå¨ –í–µ—Ç–µ—Ä: {wind['speed']} –º/—Å, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {wind['deg']}¬∞")
print(f"üå§ –ü–æ–≥–æ–¥–∞: {weather['main']} ({weather['description']})")
#3
file_path = "books.json"
def load_books():
    if not os.path.exists(file_path):
        return []
    with open(file_path, "r", encoding='utf-8') as f:
        return json.load(f)
def save_books(books):
    with open(file_path,"w", encoding="utf-8") as f:
        json.dump(books,f,indent=4, ensure_ascii=False)
def add_book():
    books = load_books()
    new_id = max([b["id"] for b in books],default=0)+1
    title = input("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏: ")
    author = input("–ê–≤—Ç–æ—Ä: ")
    year = int(input("–ì–æ–¥: "))
    books.append({"id": new_id, "title": title, "author": author, "year": year})
    save_books(books)
    print('–ö–Ω–∏–≥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞.')

def update_book():
    books = load_books()
    book_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∫–Ω–∏–≥–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: "))
    for book in books:
        if book["id"]==book_id:
            book["title"] = input(f"–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ—Ö–æ—Ç–∏—Ç–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å  ({book['title']}): ") or book["title"]
            book["author"] = input(f"–ù–æ–≤—ã–π –∞–≤—Ç–æ—Ä –µ—Å–ª–∏ –Ω–µ—Ö–æ—Ç–∏—Ç–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å   ({book['author']}): ") or book["author"]
            book["year"] = int(input(f"–ù–æ–≤—ã–π –≥–æ–¥ –µ—Å–ª–∏ –Ω–µ—Ö–æ—Ç–∏—Ç–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å  ({book['year']}): ") or book["year"])
            save_books(books)
            print("–ö–Ω–∏–≥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")
            return
    print("–ö–Ω–∏–≥–∞ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
def delete_book():
    books = load_books()
    book_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∫–Ω–∏–≥–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: "))
    books = [b for b in books if b["id"]!=book_id]
    save_books(books)
    print("–ö–Ω–∏–≥–∞ —É–¥–∞–ª–µ–Ω–∞ (–µ—Å–ª–∏ –±—ã–ª–∞).")
    return
def show_books():
    books = load_books()
    if not books:
        print("–ö–Ω–∏–≥ –ø–æ–∫–∞ –Ω–µ—Ç.")
        return
    for book in books:
        print(f"ID: {book['id']} | {book['title']} by {book['author']} ({book['year']})")

def main_books():
        while True:
            print("\nüìö –ú–µ–Ω—é:")
            print("1. –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–∏–≥–∏")
            print("2. –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É")
            print("3. –û–±–Ω–æ–≤–∏—Ç—å –∫–Ω–∏–≥—É")
            print("4. –£–¥–∞–ª–∏—Ç—å –∫–Ω–∏–≥—É")
            print("0. –í—ã—Ö–æ–¥")
            choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")
            if choice == "1":
                show_books()
            elif choice == "2":
                add_book()
            elif choice == "3":
                update_book()
            elif choice == "4":
                delete_book()
            elif choice == "0":
                break
            else:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.")    

if __name__ == "__main__":
    main_books()
#4
API_KEY = "f1511928" 
def get_movie_by_genre(genre):
    url = f"http://www.omdbapi.com/?apikey={API_KEY}&type=movie&s={genre}"
    response = requests.get(url)
    data = response.json()
    if data["Response"] =="True":
        movies = data["Search"]
        random_movie = random.choice(movies)
        print("üé¨ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–π —Ñ–∏–ª—å–º:")
        print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {random_movie['Title']}")
        print(f"–ì–æ–¥: {random_movie['Year']}")
    else:
        print("–§–∏–ª—å–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∂–∞–Ω—Ä.")
    
genre_input = input("–í–≤–µ–¥–∏—Ç–µ –∂–∞–Ω—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, action, comedy, drama): ")
get_movie_by_genre(genre_input)
